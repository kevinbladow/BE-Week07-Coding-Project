package projects.dao;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;

import projects.entity.Project;
import projects.exception.DbException;
import provided.util.DaoBase;

@SuppressWarnings("unused")
public class ProjectDao extends DaoBase {

	private static final String CATEGORY_TABLE = "category";
	private static final String MATERIAL_TABLE = "material";
	private static final String PROJECT_TABLE = "project";
	private static final String PROJECT_CATEGORY_TABLE = "project_category";
	private static final String STEP_TABLE = "step";

	public Project insertProject(Project project) {
		// reads from project input and formats to SQLdb compatible input, the inserts
		// into database

		// @formatter:off
		String sql = ""
				+ "INSERT INTO " + PROJECT_TABLE + " "
				+ "(project_name, estimated_hours, actual_hours, difficulty, notes) "
				+ "VALUES "
				+ "(?, ?, ?, ?, ?)";
		//formatter:on
		
		try(Connection conn = DbConnection.getConnection()) {
			startTransaction(conn);
			
			try(PreparedStatement stmnt = conn.prepareStatement(sql)) {
				setParameter(stmnt, 1, project.getProjectName(), String.class);
				setParameter(stmnt, 2, project.getEstimatedHours(), BigDecimal.class);
				setParameter(stmnt, 3, project.getActualHours(), BigDecimal.class);
				setParameter(stmnt, 4, project.getDifficulty(), Integer.class);
				setParameter(stmnt, 5, project.getNotes(), String.class);
				
				stmnt.executeUpdate();
				
				Integer projectId = getLastInsertId(conn, PROJECT_TABLE);
				commitTransaction(conn);
				
				project.setProjectId(projectId);
				return project;
				}
			catch(Exception e) {
				rollbackTransaction(conn);
				throw new DbException(e);
			} 
		}
		catch(SQLException e) {
			throw new DbException(e);
		}
		
	}  //end insertProject

	public List<Project> fetchAllProjects() {
		
		String sql = "SELECT * FROM " + PROJECT_TABLE + " ORDER BY project_name ";
		
		try(Connection conn = DbConnection.getConnection()) {  //outer try - obtain connection
			startTransaction(conn);
			
			try(PreparedStatement stmnt = conn.prepareStatement(sql)) { // inner try
				try (ResultSet rs = stmnt.executeQuery()) {
					List<Project> projects = new LinkedList<>();
					
					while(rs.next()) {
						projects.add(extract(rs,Project.class));
			}
			return projects;
			} 
				}	
			catch(Exception e) {
				throw new DbException(e);
				} 
		} // end outer try
		catch(SQLException e) {
			throw new DbException(e);
		} // end outer catch
	} // end connection

}